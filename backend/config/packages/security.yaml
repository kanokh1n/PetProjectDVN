security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Брандмауэр для входа (получения токена)
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Основной брандмауэр для всех API запросов
        api:
            pattern: ^/api
            stateless: true
            jwt: ~  # Включаем JWT-аутентификацию

        # Отключаем security для dev-инструментов
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
        - { path: ^/api/login,    roles: PUBLIC_ACCESS }  # Разрешаем доступ без аутентификации
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api,          roles: IS_AUTHENTICATED_FULLY }  # Все остальные API пути требуют аутентификации

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
